void config _P((char *, int));
int do_config _P((char *, struct socket *, int));
int get_port _P((char *, int));
int cfg_redir_x _P((char *, struct socket *));
int cfg_setunit _P((char *, struct socket *));
int cfg_redir _P((char *, struct socket *));
int cfg_baudrate _P((char *, struct socket *));
int cfg_wait _P((char *, struct socket *));
int cfg_sp_addr _P((char *, struct socket *));
int cfg_ctl_addr _P((char *, struct socket *));
int cfg_compress _P((char *, struct socket *));
int cfg_host_addr _P((char *, struct socket *));
int cfg_add_exec _P((char *, struct socket *));
int cfg_add_ptyexec _P((char *, struct socket *));
int cfg_shell _P((char *, struct socket *));
int cfg_debug _P((char *, struct socket *));
int cfg_logstart _P((char *, struct socket *));
int cfg_logstats _P((char *, struct socket *));
int cfg_config _P((char *, struct socket *));
int cfg_help _P((char *, struct socket *));
int cfg_stats _P((char *, struct socket *));
int cfg_echo _P((char *, struct socket *));
int cfg_kill_close _P((int, int));
int cfg_quit _P((char *, struct socket *));
int cfg_pass _P((char *, struct socket *));
int cfg_tty _P((char *, struct socket *));
int cfg_nozeros _P((char *, struct socket *));
int cfg_kill _P((char *, struct socket *));
int cfg_close _P((char *, struct socket *));
int cfg_exec _P((char *, struct socket *));
int cfg_ptyexec _P((char *, struct socket *));
int cfg_add_emu _P((char *, struct socket *));
int cfg_socket _P((char *, struct socket *));
int cfg_dns _P((char *, struct socket *));
int cfg_keepalive _P((char *, struct socket *));
int cfg_version _P((char *, struct socket *));
int cfg_towrite_max _P((char *, struct socket *));
int cfg_ppp_exit _P((char *, struct socket *));
void setipdefault _P((int));
int getword _P((FILE *, char *, int *, char *));
u_int32_t GetMask _P((u_int32_t));
u_int number_option _P((char *, u_int32_t *, int));
u_int int_option _P((char *, int *));
int cfg_ppp _P((char *, struct socket *));
int setdebug _P((char *, struct socket *));
int noopt _P((char *, struct socket *));
int noaccomp _P((char *, struct socket *));
int noasyncmap _P((char *, struct socket *));
int noipaddr _P((char *, struct socket *));
int nomagicnumber _P((char *, struct socket *));
int nomru _P((char *, struct socket *));
int setmru _P((char *, struct socket *));
int setmtu _P((char *, struct socket *));
int nopcomp _P((char *, struct socket *));
int setinitopt _P((char *, struct socket *));
int nopap _P((char *, struct socket *));
int reqpap _P((char *, struct socket *));
int setupapfile _P((char *, struct socket *));
int nochap _P((char *, struct socket *));
int reqchap _P((char *, struct socket *));
int setnovj _P((char *, struct socket *));
int setnovjccomp _P((char *, struct socket *));
int setvjslots _P((char *, struct socket *));
int setdomain _P((char *, struct socket *));
int setasyncmap _P((char *, struct socket *));
int setescape _P((char *, struct socket *));
int setipcpaccl _P((char *, struct socket *));
int setipcpaccr _P((char *, struct socket *));
int setusehostname _P((char *, struct socket *));
int setname _P((char *, struct socket *));
int set_user _P((char *, struct socket *));
int setremote _P((char *, struct socket *));
int setauth _P((char *, struct socket *));
int setproxyarp _P((char *, struct socket *));
int setdologin _P((char *, struct socket *));
int setlcpechointv _P((char *, struct socket *));
int setlcpechofails _P((char *, struct socket *));
int setlcptimeout _P((char *, struct socket *));
int setlcpterm _P((char *, struct socket *));
int setlcpconf _P((char *, struct socket *));
int setlcpfails _P((char *, struct socket *));
int setipcptimeout _P((char *, struct socket *));
int setipcpterm _P((char *, struct socket *));
int setipcpconf _P((char *, struct socket *));
int setipcpfails _P((char *, struct socket *));
int setpaptimeout _P((char *, struct socket *));
int setpapreqs _P((char *, struct socket *));
int setchaptimeout _P((char *, struct socket *));
int setchapchal _P((char *, struct socket *));
int setchapintv _P((char *, struct socket *));
int setpapreqtime _P((char *, struct socket *));
int setbsdcomp _P((char *, struct socket *));
int setnobsdcomp _P((char *, struct socket *));
int setpapcrypt _P((char *, struct socket *));
